# # предназначено для локального тестирования приложения
# # без докер образа и PostgreSQL

# # python -m venv .venv --upgrage-deps
# # .\.venv\Scripts\activate
# # pip install aiosqlite


# # src.database

# from typing import Annotated
# import asyncio

# from fastapi import Depends
# from sqlalchemy.ext.asyncio import create_async_engine
# from sqlalchemy.ext.asyncio import async_sessionmaker
# from sqlalchemy.ext.asyncio import AsyncSession


# # Добавить необходимые модели
# from src.declarative_base import Base
# from src.games.models import Game
# from src.providers.models import Provider
# from src.user.models import UserModel

# async_engine = create_async_engine(url='sqlite+aiosqlite:///database.db')

# AsyncSessionLocal = async_sessionmaker(
#     bind=async_engine,
#     expire_on_commit=False,
#     class_=AsyncSession
# )


# async def get_session():
#     async with AsyncSessionLocal() as session:
#         yield session


# SessionDep = Annotated[AsyncSession, Depends(get_session)]


# async def init_db():
#     async with async_engine.begin() as conn:
#         # await conn.run_sync(Base.metadata.drop_all)
#         await conn.run_sync(Base.metadata.create_all)
# asyncio.run(init_db())



# # src.declarative_base:

# from sqlalchemy.orm import DeclarativeBase


# class Base(DeclarativeBase):
#     pass
