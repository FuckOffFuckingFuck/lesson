# version: '2.34.0'

services:
  db:
    container_name: PostgreSQL
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${DB_USER} -d $${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432

  redis:
    image: redis:latest
    container_name: redis
    environment:
      - REDIS_PASS=${REDIS_PASS}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASS=${REDIS_USER_PASS}
    ports:
      - "6379:6379"
    volumes:
      - ./redisdata:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASS", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  web:
    container_name: app
    image: app
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    command: python src/main.py
    volumes:
      - .:/app
    ports:
      - 8000:8000
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres+asyncpg://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}

volumes:
  postgres_data:
